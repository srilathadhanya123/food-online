// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Foodcore.Models
{
    public partial class FoodcoreContext : DbContext
    {
        public FoodcoreContext()
        {
        }

        public FoodcoreContext(DbContextOptions<FoodcoreContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Mycart> Mycarts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Register> Registers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=LAPTOP-V357IG6O\\SQLEXPRESS01;Initial Catalog=foodcore;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Menu>(entity =>
            {
                entity.HasKey(e => e.Itemid)
                    .HasName("PK__menu__56A22C92F61C1FE2");

                entity.ToTable("menu");

                entity.Property(e => e.Itemid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("itemid");

                entity.Property(e => e.Images)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("images");

                entity.Property(e => e.Itemdesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("itemdesc");

                entity.Property(e => e.Itemname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("itemname");

                entity.Property(e => e.Price).HasColumnName("price");
            });

            modelBuilder.Entity<Mycart>(entity =>
            {
                entity.HasKey(e => e.Cartid)
                    .HasName("PK__mycart__41663FC093D34C61");

                entity.ToTable("mycart");

                entity.Property(e => e.Cartid).HasColumnName("cartid");

                entity.Property(e => e.Itemcode)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("itemcode");

                entity.Property(e => e.Username)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<Order>(entity =>
            {
                entity.ToTable("orders");

                entity.Property(e => e.Orderid).HasColumnName("orderid");

                entity.Property(e => e.Itemid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("itemid");

                entity.Property(e => e.Price).HasColumnName("price");

                entity.Property(e => e.Qty).HasColumnName("qty");

                entity.Property(e => e.Username)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("username");

                entity.HasOne(d => d.Item)
                    .WithMany(p => p.Orders)
                    .HasForeignKey(d => d.Itemid)
                    .HasConstraintName("FK__orders__itemid__72C60C4A");

                entity.HasOne(d => d.UsernameNavigation)
                    .WithMany(p => p.Orders)
                    .HasForeignKey(d => d.Username)
                    .HasConstraintName("FK__orders__username__71D1E811");
            });

            modelBuilder.Entity<Register>(entity =>
            {
                entity.HasKey(e => e.Username)
                    .HasName("PK__register__F3DBC573FB0105CF");

                entity.ToTable("register");

                entity.Property(e => e.Username)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("username");

                entity.Property(e => e.Dob)
                    .HasColumnType("date")
                    .HasColumnName("dob");

                entity.Property(e => e.Email)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Gender).HasColumnName("gender");

                entity.Property(e => e.Nationality)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.Phone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("phone");

                entity.Property(e => e.Pwd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("pwd");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}